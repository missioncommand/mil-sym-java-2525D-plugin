/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ArmyC2.C2SD.Plugin2525D;

import ArmyC2.C2SD.RendererPluginInterface.ISinglePointInfo;
import ArmyC2.C2SD.RendererPluginInterface.ISinglePointRenderer;
import ArmyC2.C2SD.Utilities.MilStdAttributes;
import ArmyC2.C2SD.Utilities.MilStdSymbol;
import ArmyC2.C2SD.Utilities.ModifiersTG;
import ArmyC2.C2SD.Utilities.ModifiersUnits;
import ArmyC2.C2SD.Utilities.SymbolDef;
import ArmyC2.C2SD.Utilities.SymbolDefTable;
import ArmyC2.C2SD.Utilities.SymbolUtilities;
import java.awt.Color;
import java.awt.Graphics2D;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 *
 * @author User
 */
public class SVGTester extends javax.swing.JFrame {

    /**
     * Creates new form SVGTester
     */
    public SVGTester() {
        initComponents();
        SVGLookup.getInstance();
        cbSize.add("30");
        cbSize.add("45");
        cbSize.add("50");
        cbSize.add("100");
        
        
        choice1.add("Space Station");
        choice1.add("Airship");
        choice1.add("Law Enforcement");
        choice1.add("Howitzer Heavy");
        choice1.add("UXO");
        choice1.add("Action Point");
        choice1.add("Ambush");
        choice1.add("Decision Point");
        choice1.add("Nuclear Event");
        choice1.add("Drizzle");
        choice1.add("Data Manipulation");
        choice1.add("IED");//*/
        
        choice1.select(2);
        cbSize.select(3);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new java.awt.Panel();
        tfSymbolID = new java.awt.TextField();
        btnDraw = new java.awt.Button();
        cbSize = new java.awt.Choice();
        choice1 = new java.awt.Choice();
        cbModifiers = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel1.setPreferredSize(new java.awt.Dimension(532, 532));

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 532, Short.MAX_VALUE)
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        tfSymbolID.setText("30031000002003000000");

        btnDraw.setLabel("Draw");
        btnDraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDrawActionPerformed(evt);
            }
        });

        choice1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                choice1ItemStateChanged(evt);
            }
        });

        cbModifiers.setText("Modifiers");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnDraw, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbSize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(tfSymbolID, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(choice1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbModifiers)))
                .addContainerGap(113, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tfSymbolID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(choice1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbModifiers))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 139, Short.MAX_VALUE)
                        .addComponent(btnDraw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbSize, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(191, 191, 191))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private Map<String, String> populateModifiers(Map<String,String> modifiers)
    {
        
        modifiers.put(ModifiersTG.H_ADDITIONAL_INFO_1,"H");
        modifiers.put(ModifiersTG.H1_ADDITIONAL_INFO_2,"H1");
        modifiers.put(ModifiersTG.H2_ADDITIONAL_INFO_3,"H2");
        modifiers.put(ModifiersTG.X_ALTITUDE_DEPTH,"0");//X
        modifiers.put(ModifiersUnits.K_COMBAT_EFFECTIVENESS,"100");//K
        modifiers.put(ModifiersTG.Q_DIRECTION_OF_MOVEMENT,"45");//Q

        modifiers.put(ModifiersTG.W_DTG_1,SymbolUtilities.getDateLabel(new Date()));//W
        modifiers.put(ModifiersTG.W1_DTG_2,SymbolUtilities.getDateLabel(new Date()));//W1
        modifiers.put(ModifiersUnits.J_EVALUATION_RATING,"J");
        modifiers.put(ModifiersUnits.M_HIGHER_FORMATION,"M");
        modifiers.put(ModifiersUnits.N_HOSTILE,"ENY");
        modifiers.put(ModifiersUnits.P_IFF_SIF,"P");
        modifiers.put(ModifiersUnits.Y_LOCATION,"Y");

        modifiers.put(ModifiersUnits.C_QUANTITY,"C");

        modifiers.put(ModifiersUnits.F_REINFORCED_REDUCED,"RD");
        modifiers.put(ModifiersUnits.L_SIGNATURE_EQUIP,"!");
        modifiers.put(ModifiersUnits.AA_SPECIAL_C2_HQ,"AA");
        modifiers.put(ModifiersUnits.G_STAFF_COMMENTS,"G");
        //symbol.symbolicon A
        modifiers.put(ModifiersUnits.V_EQUIP_TYPE,"V");
        modifiers.put(ModifiersTG.T_UNIQUE_DESIGNATION_1,"T");
        modifiers.put(ModifiersTG.T1_UNIQUE_DESIGNATION_2,"T1");
        modifiers.put(ModifiersUnits.Z_SPEED,"999");//Z

        modifiers.put(ModifiersUnits.AD_PLATFORM_TYPE,"AD");//AD
        modifiers.put(ModifiersUnits.AE_EQUIPMENT_TEARDOWN_TIME,"AE");//AE
        modifiers.put(ModifiersUnits.AF_COMMON_IDENTIFIER,"AF");//AF

        modifiers.put(ModifiersUnits.SCC_SONAR_CLASSIFICATION_CONFIDENCE, "5");

        return modifiers;
    }
    
    private void btnDrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDrawActionPerformed
        //SinglePoint2525DRenderer sr = new SinglePoint2525DRenderer();
        ISinglePointRenderer spr = new SinglePoint2525DRenderer();
        
        //set milStdAttributes
        Map<String,String> modifiers = new HashMap<String, String>();
        modifiers.put(MilStdAttributes.PixelSize, cbSize.getSelectedItem());
        //modifiers.put(MilStdAttributes.LineColor, "#00FF00");
        //modifiers.put(MilStdAttributes.FillColor, "#FF0000");
        if(cbModifiers.isSelected())
            populateModifiers(modifiers);
        
        ISinglePointInfo pi = spr.render(this.tfSymbolID.getText(), modifiers);
        
        Graphics2D g2d = (Graphics2D)this.panel1.getGraphics();
        g2d.setColor(this.panel1.getBackground());
        g2d.fillRect(0, 0, this.panel1.getWidth(), this.panel1.getHeight());
        g2d.setColor(Color.red);
        //g2d.drawRect(0, 0, (int)pi.getSymbolBounds().getWidth(), (int)pi.getSymbolBounds().getHeight());
        g2d.drawImage(pi.getImage(), 0, 0, null);
        
        //g2d.fillRect((int)pi.getSymbolCenterPoint().getX()-1, (int)pi.getSymbolCenterPoint().getY()-1, 2, 2);
        //g2d.drawLine(0, 0, (int)pi.getSymbolCenterPoint().getX(), (int)pi.getSymbolCenterPoint().getY());
        
        //g2d.drawRect((int)pi.getSymbolBounds().getX(), (int)pi.getSymbolBounds().getY(), (int)pi.getSymbolBounds().getWidth(), (int)pi.getSymbolBounds().getHeight());
    }//GEN-LAST:event_btnDrawActionPerformed

    private void choice1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_choice1ItemStateChanged
        // TODO add your handling code here:
        String itemName = String.valueOf(evt.getItem());
        if(itemName.equals("Space Station"))
            tfSymbolID.setText("30030500001207000000");
        else if(itemName.equals("Airship"))//activity
            tfSymbolID.setText("30030100001105000000");
        else if(itemName.equals("Law Enforcement"))//activity
            tfSymbolID.setText("30031000002003000000");
        else if(itemName.equals("Howitzer Heavy"))//activity
            tfSymbolID.setText("30031500001109030000");
        else if(itemName.equals("UXO"))//activity
            tfSymbolID.setText("30033600001200000000");
        else if(itemName.equals("Ambush"))//activity
            tfSymbolID.setText("30032500001417000000");//ambush 25, 141700
        else if(itemName.equals("Action Point"))//activity
            tfSymbolID.setText("30032500001301000000");
        else if(itemName.equals("Decision Point"))//activity
            tfSymbolID.setText("30032500001307000000");
        else if(itemName.equals("Nuclear Event"))//activity
            tfSymbolID.setText("30032500002815000000");
        else if(itemName.equals("Drizzle"))//activity
            tfSymbolID.setText("30034500001605020000");
        else if(itemName.equals("Data Manipulation"))//activity
            tfSymbolID.setText("30036000001604000000");
        else if(itemName.equals("IED"))//activity
            tfSymbolID.setText("30034000001103000000");
    }//GEN-LAST:event_choice1ItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SVGTester.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SVGTester.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SVGTester.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SVGTester.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SVGTester().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button btnDraw;
    private javax.swing.JCheckBox cbModifiers;
    private java.awt.Choice cbSize;
    private java.awt.Choice choice1;
    private java.awt.Panel panel1;
    private java.awt.TextField tfSymbolID;
    // End of variables declaration//GEN-END:variables
}
